
## CORE FUNCTIONS

## hydromad.R
export(hydromad)
export(isFullySpecified)
export(coef.hydromad)
S3method(print, hydromad)
S3method(fitted, hydromad)
S3method(residuals, hydromad)
S3method(observed, hydromad)
export(getU, getP)
S3method(getU, hydromad)
S3method(getP, hydromad)
S3method(vcov, hydromad)
S3method(deviance, hydromad)
export(isValidModel)
S3method(isValidModel, default)
S3method(isValidModel, hydromad)

export(hydromad.sim)

export(update.hydromad)
export(absorbScale)
export(absorbScale.hydromad)

export(predict.hydromad)

export(simulate.hydromad)

export(summary.hydromad)
S3method(print, summary.hydromad)
S3method(print, summaryWithBreaks.hydromad)

export(xyplot.hydromad)
export(errormasscurve)
export(errormasscurve.default)
export(xyplot.tf)
export(qqmath.hydromad)
export(tsdiag.hydromad)


## ROUTING MODELS

export(uh.sim,
       ssg.uh,
       normalise.uh,
       uh.ls.fit,
       uh.sriv.fit,
       uh.inverse.fit)

export(expuh.sim,
       ssg.expuh,
       normalise.expuh,
       expuh.ls.fit,
       expuh.sriv.fit,
       expuh.inverse.fit)


## TF: TRANSFER FUNCTIONS

## tfUtils.R: (no exports)

## tf.R
export(tf,
       update.tf,
       predict.tf,
       coef.tf,
       summary.tf,
       normalise.tf,
       vcov.tf)
S3method(print, tf)
S3method(print, summary.tf)
S3method(fitted, tf)
S3method(observed, tf)
S3method(getU, tf)
S3method(isValidModel, tf)

export(tf.sim)

export(filter_loss) # export?
useDynLib(hydromad, filter_constloss)

export(tf.fit,
       makePrefilter,
       estimateDelay)

export(tf.ls.fit)

export(tf.riv.fit)
export(tf.sriv.fit)
useDynLib(hydromad, sriv_system)

export(tf.lambda.fit)

export(tf.inverse.fit,
       tf.fft.inverse.fit,
       tf.lambda.inverse.fit,
       tf.pars.init)

export(tf.inverse.sim,
       tf.fft.inverse.sim,
       wiener)
useDynLib(hydromad, inverse_filter)
useDynLib(hydromad, inverse_filter_lambda)

export(tryModelOrders,
       ordersSummary)


## SOIL MOISTURE ACCOUNTING MODELS

export(cwi.sim)
export(absorbScale.cwi)

export(filter_tv)
useDynLib(hydromad, ar1_tv)

export(cmd.sim)
useDynLib(hydromad, sma_cmd)

export(bucket.sim)
#useDynLib(hydromad, sma_bucket)

#export(simhyd.sim)
#export(simhydOptions)
#useDynLib(hydromad, sma_simhyd)


## CALIBRATION METHODS

export(fitBySampling)

export(fitByOptim)

export(fitBySCE)

export(fitByDE)

## TODO: fitByGenoud?

## fitStat.R
export(objFunVal,
       bestByObjFun,
       tsFitStat,
       fitStat,
       fitBias)

export(parameterSets)

## sce.R
export(SCEoptim)


## RUNLIST

## runlist.R
export(runlist,
       as.runlist,
       errormasscurve.runlist,
       xyplot.runlist,
       qqmath.runlist,
       summary.hydromad.runlist,
       summary.tf.runlist,
       print.summary.runlist)
S3method("[", runlist)
S3method(print, runlist)
S3method(print, summary.runlist)
S3method(print, hydromad.runlist)
S3method(print, tf.runlist)


## MISCELLANEOUS

export(convertFlow)

## events.R
export(event.clusters,
       eventapply,
       preInterEventDuration,
       eventAttributes)

## utilities.R
export(tsCleanup,
       autocorrTime,
       byDays, byYears, bySecs,
       observed,
       observed.default,
       numericSummary)

## rollccf.R
export(rollccf,
       xyplot.rollccf,
       ccfForLags)

## error.sim.R
export(flow.inputs.sim,
       rain.error.sim,
       flow.error.sim)


## options.R
export(hydromad.options,
       hydromad.getOption)

#panel.superpose.cycle


## SWIMP (TODO: move out)

## swimp.R
export(swimp)
useDynLib(hydromad, swimp_core)

## poweroid.R
export(poweroid)
