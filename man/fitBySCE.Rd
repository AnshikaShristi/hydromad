\name{fitBySCE}
\alias{fitBySCE}
\title{
  Fit a hydromad model using the SCE (Shuffled Complex Evolution) algorithm.
}
\description{
  Fit a hydromad model using the SCE (Shuffled Complex Evolution) algorithm.
}
\usage{
fitBySCE(MODEL, 
         objective = hydromad.getOption("objective"),
         control = hydromad.getOption("sce.control"),
         vcov = FALSE)
}
\arguments{
  \item{MODEL}{
    a model specification created by \code{\link{hydromad}}. It should
    not be fully specified, i.e one or more parameters should be defined
    by \emph{ranges} of values rather than exact values.
  }
  \item{objective}{
    objective function to minimise, given as a \code{formula} involving
    \code{Q}, \code{X} and/or \code{U}. See \code{\link{objFunVal}}.
  }
  \item{control}{
    settings for the SCE algorithm. See \code{\link{SCEoptim}}.
  }
  \item{vcov}{
    if \code{vcov = TRUE}, the parameter variance-covariance matrix
    will be estimated from the final population.
    It can be extract using \code{\link{vcov}}.
  }
}
\value{
  the best model from those sampled, according to the given
  \code{objective} function. Also, these extra elements are inserted:
  \item{fit.result}{
    the result from \code{\link{SCEoptim}}.
  }
  \item{objective}{
    the \code{objective} function used.
  }
  \item{funevals}{
    total number of evaluations of the model simulation function.
  }
  \item{timing}{
    timing vector as returned by \code{system.time}.
  }
}
\author{
  Felix Andrews \email{felix@nfrac.org}
}
\seealso{
  \code{\link{SCEoptim}},
  \code{\link{objFunVal}}
}
\examples{
data(Cotter)
x <- Cotter[1:1000]

## IHACRES CWI model with power law unit hydrograph
modx <- hydromad(x, sma = "cwi", routing = "powuh")
modx

foo <- fitBySCE(modx,
  control = list(returnpop = TRUE, maxtime = 30))

summary(foo)

## return value from SCE:
str(foo$fit.result)

ppp <- t(foo$fit.result$POP.FIT.ALL)
convergenceTs <- ts(ppp, deltat = foo$funevals / NROW(ppp))

xyplot(convergenceTs, screens = 1, type = "p", ylim = c(NA,-1.3),
  xlab = "function evaluations", ylab = "objective fn. value") +
layer(panel.average(..., horiz = FALSE, lwd = 2)) +
layer(panel.average(..., horiz = FALSE, fun = min, lwd = 2, col = 1))
}
\keyword{ optimization }
